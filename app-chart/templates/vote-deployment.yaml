apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vote
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.vote.replicaCount }}
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      nodeSelector:
          frontend: ui
      containers:
        - image: "{{ .Values.vote.image.repository }}:{{ .Values.vote.image.tag }}"
          name: vote
          ports:
            - containerPort: 80
              name: vote
          resources:
            requests:
              memory: "{{ .Values.vote.resources.requests.memory }}"
              cpu: "{{ .Values.vote.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.vote.resources.limits.memory }}"
              cpu: "{{ .Values.vote.resources.limits.cpu }}"
          readinessProbe:
            httpGet:
              path: "{{ .Values.vote.readinessProbe.path }}"
              port: {{ .Values.vote.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.vote.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.vote.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: "{{ .Values.vote.livenessProbe.path }}"
              port: {{ .Values.vote.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.vote.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.vote.livenessProbe.periodSeconds }}
